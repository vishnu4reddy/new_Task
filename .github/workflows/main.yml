name: Rebase PR with Main on Push

on:
  push:
    branches:
      - main   # Adjust according to your feature branch naming convention
    # Alternatively, you can use a pattern or specific branches.
permissions:
  contents: write
  checks: read
  deployments: read
  discussions: read
  issues: read
  pages: read
  packages: read
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: read
jobs:
  rebase-with-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref : ${{github.head_ref}}

      - name: Set up Git
        run: |
          git config user.name "vishnu4reddy"
          git config user.email "vishnu4reddy@users.noreply.github.com"

      - name: Fetch latest main branch
        run: |
          git fetch origin main

      - name: Rebase the PR branch onto main
        run: |
          git checkout ${{ github.head_ref }}
          git rebase origin/main

      - name: Check for rebase conflicts
        run: |
          if git diff --quiet; then
            echo "No conflicts detected during rebase."
          else
            echo "Conflicts detected during rebase! Resolving conflicts..."
            # Automatically resolve conflicts by keeping changes from the PR (ours) or from main (theirs)
            git rebase --strategy=recursive --strategy-option=ours origin/main || echo "Automatic rebase failed. Conflicts need manual resolution."
            git add .
            git rebase --continue
          fi

      - name: Push changes back to the PR branch
        run: |
          git push --force-with-lease origin ${{ github.head_ref }}

