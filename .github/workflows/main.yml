name: Auto Resolve Conflicts and Merge PR

on:
  push:
    branches:
      - main  
permissions:
  contents: write
  pull-requests: read
jobs:
  rebase-with-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:  
          token: ${{  secrets.GITHUB_TOKEN  }} 

      - name: Set up Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          with:  
            token: ${{  secrets.GITHUB_TOKEN  }} 

      - name: Fetch the main branch
        run: |
          git fetch origin main

      - name: Get PR number, branch name and source branch
        run: |
          echo "PR Number: ${{ github.event.pull_request.number }}"
          echo "Source Branch: ${{ github.head_ref }}"
          echo "Target Branch: main"

      - name: Check for conflicts with main branch
        id: check_conflicts
        run: |
          git fetch origin main
          git checkout -b pr-branch ${{ github.head_ref }}
          git merge --no-ff origin/main || echo "Merge conflict detected"

      - name: Handle merge conflicts if they exist
        if: failure() && steps.check_conflicts.outcome == 'failure'
        run: |
          echo "Conflicts detected, attempting to resolve them..."
          git merge --strategy-option=ours origin/main
          git add .
          git commit -m "Resolved conflicts with main"
          git push origin ${{ github.head_ref }}

      - name: Check if PR is behind main
        id: check_pr_status
        run: |
          MAIN_COMMIT=$(git rev-parse origin/main)
          PR_COMMIT=$(git rev-parse HEAD)

          if [ "$MAIN_COMMIT" != "$PR_COMMIT" ]; then
            echo "PR is not up-to-date with main. The PR is behind and should not be merged yet."
            exit 1
          else
            echo "PR is up-to-date with main. Safe to merge."
          fi

      - name: Merge PR into main branch if no conflicts and up-to-date
        if: success() && steps.check_pr_status.outcome == 'success'
        uses: peter-evans/merge-pull-request@v3
        with:
          pull-request-number: ${{ github.event.pull_request.number }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Output PR information
        run: |
          echo "PR #${{ github.event.pull_request.number }} from branch ${{ github.head_ref }} has been successfully merged into main."

